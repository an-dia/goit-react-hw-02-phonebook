{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/Title/Title.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactsList.module.css"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","htmlFor","input","type","onChange","id","button","Component","ContactsList","contacts","onDeleteContact","contactList","map","listItem","onClick","filterInputId","Filter","filterWrapper","App","filter","addContact","contact","find","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4da633b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__XjU41\",\"label\":\"Filter_label__1A11C\",\"input\":\"Filter_input__LchWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2kbiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2P4wC\",\"label\":\"ContactForm_label__2XmB1\",\"input\":\"ContactForm_input__aTzwJ\",\"button\":\"ContactForm_button__1OUSa\"};","import s from './Container.module.css';\r\n\r\nconst Container = ({children})=> {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\n\r\n\r\nconst Title = ({ title, level = 1 }) => {\r\n  const TagNameTitle = `h${level}`;\r\n  return (\r\n    <TagNameTitle >{title}</TagNameTitle>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n   };\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const {name, number} = this.state\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.reset();\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '',})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n       <form className={s.form} onSubmit={this.handleSubmit}> \r\n          <label className={s.label} htmlFor={this.nameInputId}> Name </label>\r\n          <input className={s.input}\r\n              type='text'\r\n              name='name'\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id = {this.nameInputId}\r\n        />\r\n        <label className={s.label}  htmlFor={this.numberInputId}> Number </label>\r\n        <input className={s.input}\r\n              type='tel'\r\n              name='number'\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id = {this.numberInputId}\r\n        />\r\n              \r\n          <button className={s.button} type='submit'>Add contact</button>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactsList.module.css';\r\n// import shortid from 'shortid';\r\n// let listId = shortid.generate();\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact} ) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <>\r\n        <li className={s.listItem} key={id}>{name} : {number}\r\n            <button  className={s.button}\r\n            type='button'\r\n             onClick={() => onDeleteContact(id)}\r\n            >Delete</button>\r\n        </li>\r\n        </>  \r\n     ))} \r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired, \r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n\r\n};\r\n\r\nexport default ContactsList;","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './Filter.module.css';\r\n\r\nconst filterInputId = shortid.generate();\r\nconst Filter = ({ name, onChange }) => (\r\n  <div className={s.filterWrapper}>\r\n    <label className={s.label} htmlFor={filterInputId}>Find contacts by name</label>\r\n    <input className={s.input}\r\n      type=\"text\"\r\n      value={name}\r\n      onChange={onChange}\r\n      id ={filterInputId}\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import {Component} from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactForm/ContactsList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  \n  }\n \n  addContact = (name, number) => {\n      const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find((contact)=>contact.name===name)) {\n   alert(`${name} is already in contacts`);\n    } else if (contact.name === '') {\n      alert('Please enter your name');\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n    }));\n  }\n}  \n  \n    deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  \n\n    changeFilter = e => {\n      this.setState({ filter: e.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n      const { filter, contacts } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    }\n\n    render() {\n      const { filter } = this.state;\n      const visibleContacts = this.getVisibleContacts();\n\n\n      return (\n        <Container>\n          <Title title='Phonebook' level={1} />\n          <ContactForm onSubmit={this.addContact} />\n          <Title title='Contacts' level={2} />\n          <Filter\n            value={filter}\n            onChange={this.changeFilter}\n          />\n          <ContactsList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Container>\n      );\n    }\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__2ZeDc\",\"listItem\":\"ContactsList_listItem__ntPcY\",\"button\":\"ContactsList_button__1pFpV\"};"],"sourceRoot":""}