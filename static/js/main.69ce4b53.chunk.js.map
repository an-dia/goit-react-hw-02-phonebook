{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/Title/Title.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactsList.module.css"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","htmlFor","input","type","onChange","id","button","Component","ContactsList","contacts","onDeleteContact","contactList","map","listItem","text","onClick","filterInputId","Filter","filterWrapper","App","filter","addContact","contact","find","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69ce4b53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__XjU41\",\"label\":\"Filter_label__1A11C\",\"input\":\"Filter_input__LchWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2kbiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2P4wC\",\"label\":\"ContactForm_label__2XmB1\",\"input\":\"ContactForm_input__aTzwJ\",\"button\":\"ContactForm_button__1OUSa\"};","import s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title, level = 1 }) => {\r\n  const TagNameTitle = `h${level}`;\r\n  return <TagNameTitle>{title}</TagNameTitle>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.nameInputId}>\r\n          {' '}\r\n          Name{' '}\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n        />\r\n        <label className={s.label} htmlFor={this.numberInputId}>\r\n          {' '}\r\n          Number{' '}\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          id={this.numberInputId}\r\n        />\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n// import shortid from 'shortid';\n// let listId = shortid.generate();\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={s.listItem} key={id}>\n            <p className={s.text}>\n              {name} : {number}\n            </p>\n            <button className={s.button} type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './Filter.module.css';\r\n\r\nconst filterInputId = shortid.generate();\r\nconst Filter = ({ name, onChange }) => (\r\n  <div className={s.filterWrapper}>\r\n    <label className={s.label} htmlFor={filterInputId}>\r\n      Find contacts by name\r\n    </label>\r\n    <input className={s.input} type=\"text\" value={name} onChange={onChange} id={filterInputId} />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport Container from './components/Container';\r\nimport Title from './components/Title';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactsList from './components/ContactForm/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n    } else if (contact.name === '') {\r\n      alert('Please enter your name');\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Container>\r\n        <Title title=\"Phonebook\" level={1} />\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <Title title=\"Contacts\" level={2} />\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactsList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__2ZeDc\",\"listItem\":\"ContactsList_listItem__ntPcY\",\"text\":\"ContactsList_text__XFdg8\",\"button\":\"ContactsList_button__1pFpV\"};"],"sourceRoot":""}